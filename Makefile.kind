CLIENT_PLATFORM = $(shell go env GOOS)
CLIENT_ARCH     = $(shell go env GOARCH)

# KinD setup
CLUSTER_NAME = porterkind
export KIND_CONFIG_FILE_NAME = kind.config.yaml

ifeq ($(CLIENT_PLATFORM),linux)
export CURRENT_HOST_IP=$(shell hostname -i | awk '{print $1; exit}' | cut -d ' ' -f 1)
else
export CURRENT_HOST_IP=$(shell ifconfig en0 | awk '/inet / {print $2; }' | cut -d ' ' -f 2)
endif

## Create file definition for the kind cluster
define get_kind_config_file
# Remove config file
rm -rf ${KIND_CONFIG_FILE_NAME}
# Define config file
cat << EOF >> ${KIND_CONFIG_FILE_NAME}
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
networking:
  apiServerAddress: "${CURRENT_HOST_IP}"
  apiServerPort: 6443
EOF
endef
export KIND_CLUSTER_FILE_CREATOR = $(value get_kind_config_file)

install-kind:
	@curl -Lo /tmp/kind https://github.com/kubernetes-sigs/kind/releases/download/v0.8.1/kind-$(CLIENT_PLATFORM)-$(CLIENT_ARCH)
	@chmod +x /tmp/kind
	@sudo mv /tmp/kind /usr/local/bin/kind

create-kind-config-file:; @eval "$$KIND_CLUSTER_FILE_CREATOR"

create-kind-cluster: create-kind-config-file
	@kind create cluster \
		--name ${CLUSTER_NAME} \
		--config ${KIND_CONFIG_FILE_NAME}
	@kubectl config set clusters.kind-${CLUSTER_NAME}.server https://${CURRENT_HOST_IP}:6443

delete-kind-cluster:
	@kind delete cluster --name ${CLUSTER_NAME}
