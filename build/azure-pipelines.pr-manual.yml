# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger: none
pr: 
  - master

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  GOROOT: '/usr/local/go1.13' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  MODULE_PATH: '$(GOPATH)/src/get.porter.sh/porter' # Path to the module's code

jobs:
- job: integration_test
  steps:
  - script: build/azure-pipelines.setup-go-workspace.sh
    displayName: 'Set up the Go workspace'

  - task: Docker@1
    displayName: Docker Login
    inputs:
      containerRegistryType: Container Registry
      dockerRegistryEndpoint: deislabs-registry
      command: login

  - task: DownloadSecureFile@1
    displayName: Download Kubeconfig
    inputs:
      secureFile: kubeconfig

  - script: |
      export KUBECONFIG=$DOWNLOADSECUREFILE_SECUREFILEPATH
      make test-integration
    workingDirectory: '$(MODULE_PATH)'
    displayName: 'Integration Test'

- job: cli_test
  steps:
  - script: build/azure-pipelines.setup-go-workspace.sh
    displayName: 'Set up the Go workspace'

  - task: Docker@1
    displayName: Docker Login
    inputs:
      containerRegistryType: Container Registry
      dockerRegistryEndpoint: deislabs-registry
      command: login

  - task: DownloadSecureFile@1
    displayName: Download Kubeconfig
    inputs:
      secureFile: kubeconfig

  - script: |
       make build
    workingDirectory: '$(MODULE_PATH)'
    displayName: 'Build'

  - script: |
      export KUBECONFIG=$DOWNLOADSECUREFILE_SECUREFILEPATH
      REGISTRY=deislabs make test-cli
    workingDirectory: '$(MODULE_PATH)'
    displayName: 'CLI Test'
